import * as C from './definitions-core-common.js' // 'C'ommon

export interface ICoordinates {
	x: number // x coordinate starting at top left
	y: number // y coordinate starting at top left
}

export interface IDimensions {
	w: number // width
	h: number // height
}

export interface IFont {
	fontName?: string // font name, if absent, use default
	fontSize?: number // font size, if absent, use default
	fontColor?: C.IRgbColor // font color, if absent, use default
}

export interface IStyle {
	font?: IFont
	lineColor?: C.IRgbColor // if absent, use default
	fillColor?: C.IRgbColor // if absent, use default
}

// --- nodes ---
export type TNodeTypes = 'Element' | 'Container' | 'Label'

export interface INodeInfo extends ICoordinates, IDimensions, IStyle {
	elementRef?: C.IRI
	type?: TNodeTypes
	// TODO - use ILabel interface, but make it optional
	label?: C.TLangString
}

// --- connections ---
export type TConnectionTypes = 'Line' | 'Relationship'

export interface IConnectionInfo extends IStyle {
	// type: Identifier // TODO - what is it for?
	source: C.IRI
	target: C.IRI
	relationshipRef?: C.IRI
	bendpoints?: ICoordinates[]
	type: TConnectionTypes
}

// TODO - add viewRef

export interface IDiagram {
	nodes?: Record<C.IRI, INodeInfo>
	connections?: Record<C.IRI, IConnectionInfo>
}
